name: Generate Latest Release JSON

on:
  push:
    tags:
      - '*'

jobs:
  generate_latest_release_json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get release data
      run: |
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest")
        ALL_RELEASES=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases")
        
        # Extract the latest release and pre-release tags
        LATEST_RELEASE_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
        LATEST_PRE_RELEASE_TAG=$(echo "$ALL_RELEASES" | jq -r '.[] | select(.prerelease) | .tag_name')
        
        # Extract all release and pre-release tags
        ALL_RELEASE_TAGS=$(echo "$ALL_RELEASES" | jq -r '.[] | select(.prerelease | not) | .tag_name')
        ALL_PRE_RELEASE_TAGS=$(echo "$ALL_RELEASES" | jq -r '.[] | select(.prerelease) | .tag_name')
        
        # Create the JSON file
        echo "{
          \"latestRelease\": \"$LATEST_RELEASE_TAG\",
          \"latestPreRelease\": \"$LATEST_PRE_RELEASE_TAG\",
          \"allReleaseTags\": [$ALL_RELEASE_TAGS],
          \"allPreReleaseTags\": [$ALL_PRE_RELEASE_TAGS]
        }" > latest-release.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Show generated JSON
      run: cat latest-release.json
